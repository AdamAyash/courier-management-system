IF EXISTS 
(
	SELECT * FROM SYS.tables WITH(NOLOCK)
	WHERE object_id = OBJECT_ID(N'dbo.COUNTERS', N'U')
) 
BEGIN
	DROP TABLE dbo.COUNTERS
END 

CREATE TABLE COUNTERS
(
	COUNTER_NAME				NVARCHAR(128) NOT NULL,
	TABLE_NAME					NVARCHAR(128) NOT NULL,
	PRIMARY_KEY_COLUMN_NAME		NVARCHAR(128) NOT NULL,
	START_INDEX					INT			  NOT NULL,
	CURRENT_INDEX_POSITION		INT			  NOT NULL,
	INDEX_STEP					INT			  NOT NULL,
	[DESCRIPTION]				NVARCHAR(504) NOT NULL,
)
GO

CREATE CLUSTERED INDEX IX_COUNTERS_TABLE_NAME_PRIMARY_KEY_COLUMN_NAME
ON COUNTERS
(
	TABLE_NAME,
	PRIMARY_KEY_COLUMN_NAME
)
GO

CREATE PROCEDURE SP_ADD_NEW_COUNTER
	@COUNTER_NAME				NVARCHAR(128),
	@TABLE_NAME					NVARCHAR(128),
	@COLUMN_NAME				NVARCHAR(128),
	@START_INDEX				INT	= 1,
	@CURRENT_INDEX_POSITION		INT	= 1,
	@INDEX_STEP					INT = 1	,		
	@DESCRIPTION				NVARCHAR(504) = N''
AS
BEGIN

IF EXISTS
(
	SELECT * FROM COUNTERS
	WHERE TABLE_NAME = @TABLE_NAME
)	
BEGIN
	PRINT 'COUNTER ALREADY EXISTS!'
	RETURN
END

	INSERT INTO COUNTERS
	(
		COUNTER_NAME			,		
		TABLE_NAME				,
		PRIMARY_KEY_COLUMN_NAME	,
		START_INDEX				,
		CURRENT_INDEX_POSITION	,
		INDEX_STEP				,
		[DESCRIPTION]			
	)
	VALUES(@COUNTER_NAME, @TABLE_NAME, @COLUMN_NAME, @START_INDEX, @CURRENT_INDEX_POSITION, @INDEX_STEP,@DESCRIPTION)

	PRINT 'COUNTER SUCCESSFULLY ADDED!'
END
GO

DROP TABLE IF EXISTS USERS
GO

CREATE TABLE USERS
(
	ID			   INT				NOT NULL,
	UPDATE_COUNTER INT				NOT NULL,
	USERNAME	   NVARCHAR(128)	NOT NULL,
	[PASSWORD]	   NVARCHAR(256)	NOT NULL,
	ACCESS_ID	   INT			    NOT NULL,
	CONSTRAINT PK_USERS_ID PRIMARY KEY(ID),
)
GO

CREATE UNIQUE INDEX UX_USERS_USERNAME
ON USERS(USERNAME)
GO

CREATE NONCLUSTERED INDEX IX_USERS_USERNAME_PASSWORD
ON USERS(USERNAME, PASSWORD)
GO


INSERT INTO USERS
(
	ID,			  
	UPDATE_COUNTER,
	USERNAME,	  
	PASSWORD,	  
	ACCESS_ID
)
VALUES(1, 0, N'admin',N'$argon2id$v=19$m=15360,t=2,p=1$cxa/NpxUAUxu/4+LskHjtWLH/JR9jUUHbYe9AnwZ9t4bBIdqDzqhBgbxdsyCclXXEUo0rtjoSjngc/OT4pyTPg$LzjBkgFv05L+OcLxlgo5WFHoX60hup0Nze957WRGmOM', 0)
GO

EXEC SP_ADD_NEW_COUNTER N'USERS', N'USERS', N'ID'
GO

DROP TABLE IF EXISTS CITIES
GO

CREATE TABLE CITIES
( 
	ID			INT				NOT NULL,
	NAME		NVARCHAR(64)	NOT NULL,
	STATE		NVARCHAR(64)	NOT NULL,
	POST_CODE 	NVARCHAR(16)	NOT NULL
	CONSTRAINT PK_CITIES_ID PRIMARY KEY (ID) 
)
GO

DECLARE @NEXT_ID AS INT = 1;

INSERT INTO CITIES
VALUES(@NEXT_ID, N'Варна', N'Варна', N'9000')

SET @NEXT_ID = @NEXT_ID + 1

INSERT INTO CITIES
VALUES(@NEXT_ID, N'Бургас', N'Бургас', N'8000')

SET @NEXT_ID = @NEXT_ID + 1

INSERT INTO CITIES
VALUES(@NEXT_ID, N'Айтос', N'Бургас', N'8500')

SET @NEXT_ID = @NEXT_ID + 1

INSERT INTO CITIES
VALUES(@NEXT_ID, N'Силистра', N'Силистра', N'7570')

SET @NEXT_ID = @NEXT_ID + 1

INSERT INTO CITIES
VALUES(@NEXT_ID, N' Антоново', N'Търговище', N'7970')

SET @NEXT_ID = @NEXT_ID + 1

DROP TABLE IF EXISTS COMPANIES
GO

CREATE TABLE COMPANIES
(
	ID					INT					NOT NULL,
	UPDATE_COUNTER		INT					NOT NULL,
	NAME				NVARCHAR(128)		NOT NULL,
	EGFN				NVARCHAR(32)		NOT NULL,
	CITY_ID				INT					NOT NULL,
	PHONE_NUMBER		NVARCHAR(32)		NOT NULL,
	EMAIL				NVARCHAR(64)		NOT NULL,
	DATE_ESTABLISHED	DATE				NOT NULL,
	CONSTRAINT PK_COMPANIES_ID PRIMARY KEY(ID)
)
GO

CREATE UNIQUE INDEX UX_COMPANIES_EGFN
ON COMPANIES(EGFN)
GO

CREATE UNIQUE INDEX UX_COMPANIES_PHONE_NUMBER
ON COMPANIES(PHONE_NUMBER)
GO

CREATE UNIQUE INDEX UX_COMPANIES_EMAIL
ON COMPANIES(EMAIL)
GO

EXEC SP_ADD_NEW_COUNTER N'COMPANIES', N'COMPANIES', N'ID'
GO

CREATE OR ALTER VIEW VI_COMPANIES
AS
	SELECT 
		COMPANY.ID				AS ID,
		COMPANY.NAME			AS NAME,
		COMPANY.EGFN			AS EGFN,
		COMPANY.PHONE_NUMBER	AS PHONE_NUMBER,
		COMPANY.EMAIL			AS EMAIL,
		CITY.NAME				AS CITY_NAME,
		CITY.STATE				AS STATE,
		CITY.POST_CODE			AS POST_CODE
	FROM COMPANIES 
		AS COMPANY WITH(NOLOCK) 
	INNER JOIN CITIES 
		AS CITY WITH(NOLOCK)
	ON COMPANY.CITY_ID = CITY.ID
GO

DROP TABLE IF EXISTS OFFICES
GO

CREATE TABLE OFFICES
(
	ID					INT				NOT NULL,
	UPDATE_COUNTER		INT				NOT NULL,
	NAME				VARCHAR(128)	NOT NULL,
	COMPANY_ID			INT				NOT NULL,
	CITY_ID				INT				NOT NULL,
	[ADDRESS]			NVARCHAR(256)	NOT NULL,
	DATE_ESTABLISHED	DATE			NOT NULL,
	CONSTRAINT PK_OFFICES_ID PRIMARY KEY(ID),
	CONSTRAINT FK_OFFICES_COMPANY_ID_COMPANIES_ID
	FOREIGN KEY(COMPANY_ID)
	REFERENCES COMPANIES(ID)
)
GO

CREATE UNIQUE INDEX UX_OFFICES_CITY_ID_ADDRESS
ON OFFICES
(
	CITY_ID,
	[ADDRESS]
)
GO

EXEC SP_ADD_NEW_COUNTER N'OFFICES', N'OFFICES', N'ID'

DROP TABLE IF EXISTS EMPLOYEES
GO

CREATE TABLE EMPLOYEES
(
	ID					INT				NOT NULL ,
	UPDATE_COUNTER		INT				NOT NULL ,
	FIRST_NAME			NVARCHAR(64)	NOT NULL ,
	MIDDLE_NAME			NVARCHAR(64)	NOT NULL ,
	LAST_NAME			NVARCHAR(64)	NOT NULL ,
	UCN					NVARCHAR(32)	NOT NULL ,
	DATE_OF_BIRTH		DATE			NOT NULL ,
	GENDER				TINYINT			NOT NULL , 
	TELEPHONE_NUMBER	NVARCHAR(16)    NOT NULL ,
	EMAIL				NVARCHAR(64)	NOT NULL ,
	[USER_ID]			INT				NOT NULL ,			
	CITY_ID				INT				NOT NULL ,
	COMPANY_ID			INT				NOT NULL ,

	CONSTRAINT PK_EMPLOYEES_ID PRIMARY KEY(ID),
	CONSTRAINT FK_EMPLOYEES_CITIES_ID FOREIGN KEY(CITY_ID)
	REFERENCES CITIES(ID),
	CONSTRAINT FK_EMPLOYEES_USERS_ID FOREIGN KEY([USER_ID])
	REFERENCES USERS(ID),
	CONSTRAINT FK__EMPLOYEES_COMPANIES_ID FOREIGN KEY(COMPANY_ID)
	REFERENCES COMPANIES(ID)
)
GO

CREATE UNIQUE INDEX UX_EMPLOYEES_UCN ON EMPLOYEES
(
	UCN
)
GO


CREATE UNIQUE INDEX UX_EMPLOYEES_TELEPHONE_NUMBER ON EMPLOYEES
(
	TELEPHONE_NUMBER
)
GO

CREATE UNIQUE INDEX UX_EMPLOYEES_TELEPHONE_EMAIL ON EMPLOYEES
(
	EMAIL
)
GO

EXEC SP_ADD_NEW_COUNTER N'EMPLOYEES', N'EMPLOYEES', N'ID'
GO

DROP TABLE IF EXISTS CLIENTS
GO 

CREATE TABLE CLIENTS
(
	ID					INT				NOT NULL,
	UPDATE_COUNTER		INT				NOT NULL,
	FIRST_NAME			NVARCHAR(64)	NOT NULL,
	MIDDLE_NAME			NVARCHAR(64)	NOT NULL,
	LAST_NAME			NVARCHAR(64)	NOT NULL,
	UCN					NVARCHAR(16)	NOT NULL,
	COMPANY_ID			INT				NOT NULL,
	[USER_ID]			INT				NOT NULL,
	PHONE_NUMBER		NVARCHAR(16)	NOT NULL,
	CONSTRAINT PK_CLIENTS_ID PRIMARY KEY(ID),
	CONSTRAINT FK_CLIENTS_COMPANY_ID FOREIGN KEY(COMPANY_ID)
	REFERENCES COMPANIES(ID)
)
GO

CREATE UNIQUE INDEX UX_CLIENTS_UCN
ON CLIENTS(UCN)
GO

CREATE UNIQUE INDEX UX_CLIENTS_PHONE_NUMBER
ON CLIENTS(PHONE_NUMBER)
GO

EXEC SP_ADD_NEW_COUNTER 'CLIENTS', 'CLIENTS', 'ID'
GO

